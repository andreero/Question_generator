from questions import Question, QuestionSet
from random import randint, choice, randrange
from definitions.common import randdecimal, male_names, female_names, numbers, weekdays, measurement_units

volumen = QuestionSet(
    grade='8',
    capital='Körper',
    subcapital='Volumen von Körpern',
    title='Volumen',
    instruction='Das Volumen des Körpers ist gegeben. Berechne daraus die Grundfläche G.',
    question_type='gap',
    questions=[
        Question(
            formula='<mat>V = {{v1*v2*v3}} {{units}}^3<br>b = {{v2}} {{units}}<br>c = {{v3}} {{units}}</mat><br>'
                    '<mat>G = V/c = (___{{units}}^3)/(___{{units}}) = ___{{units}}^2</mat>',
            correct='{{v1*v2*v3}};{{v3}};{{v1*v2}}',
            variables={
                'v1': (randint, 5, 8),
                'v2': (randint, 10, 18),
                'v3': (randint, 5, 8),
                'units': (choice, measurement_units),
            },
            image={
                'draw_grid': False,
                'draw_axes': False,
                'axis_limits': {'xmin': '0',
                                'xmax': '5',
                                'ymin': '0',
                                'ymax': '4.5'},
                'polygons': [
                    {'xy': [(0, 0), (0, 1.5), (2, 1.5), (2, 0)],
                     'closed': True,
                     'facecolor': 'None',
                     'edgecolor': 'black',
                     'linewidth': 2,
                     'zorder': 3,
                     },
                    {'xy': [(0, 1.5), (3, 4.5), (5, 4.5), (2, 1.5)],
                     'closed': True,
                     'facecolor': 'None',
                     'edgecolor': 'black',
                     'linewidth': 2,
                     'zorder': 3,
                     },
                    {'xy': [(2, 0), (5, 3), (5, 4.5), (2, 1.5)],
                     'closed': True,
                     'facecolor': 'None',
                     'edgecolor': 'black',
                     'linewidth': 2,
                     'zorder': 3,
                     },
                ],

                'lines': [
                    {'p1': (0, 0),
                     'p2': (2, 0),
                     'linewidth': 0,
                     'text': 'a',
                     'text_kw': {
                         'fontsize': 'x-large',
                         'va': 'top',
                         'xytext': (0, -6),
                         'textcoords': 'offset points',
                     }},
                    {'p1': (2, 0),
                     'p2': (5, 3),
                     'linewidth': 0,
                     'text': ' b',
                     'text_kw': {
                         'rotation': 0,
                         'fontsize': 'x-large',
                         'ha': 'left',
                         'va': 'top',
                     }},
                    {'p1': (5, 3),
                     'p2': (5, 4.5),
                     'linewidth': 0,
                     'text': ' c',
                     'text_kw': {
                         'rotation': 0,
                         'fontsize': 'x-large',
                         'ha': 'left',
                     }},
                ]
            },
        ),
        Question(
            instruction='Berechne die Seitenlänge a mit den gegebenen Werten.',
            formula='<mat>G = {{v1*v2}} cm^2<br>b = {{v2}} cm<br>c = {{v3}} cm</mat><br>'
                    '<mat>a = G/b = (___{{units}}^2)/(___{{units}}) = ___{{units}}^2</mat>',
            correct='{{v1*v2}};{{v2}};{{v1}}',
            variables={
                'v1': (randint, 5, 8),
                'v2': (randint, 10, 18),
                'v3': (randint, 5, 8),
                'units': (choice, measurement_units),
            },
            image={
                'draw_grid': False,
                'draw_axes': False,
                'axis_limits': {'xmin': '0',
                                'xmax': '5',
                                'ymin': '0',
                                'ymax': '4.5'},
                'polygons': [
                    {'xy': [(0, 0), (0, 1.5), (2, 1.5), (2, 0)],
                     'closed': True,
                     'facecolor': 'None',
                     'edgecolor': 'black',
                     'linewidth': 2,
                     'zorder': 3,
                     },
                    {'xy': [(0, 1.5), (3, 4.5), (5, 4.5), (2, 1.5)],
                     'closed': True,
                     'facecolor': 'None',
                     'edgecolor': 'black',
                     'linewidth': 2,
                     'zorder': 3,
                     },
                    {'xy': [(2, 0), (5, 3), (5, 4.5), (2, 1.5)],
                     'closed': True,
                     'facecolor': 'None',
                     'edgecolor': 'black',
                     'linewidth': 2,
                     'zorder': 3,
                     },
                ],
                'lines': [
                    {'p1': (0, 0),
                     'p2': (2, 0),
                     'linewidth': 0,
                     'text': 'a',
                     'text_kw': {
                         'fontsize': 'x-large',
                         'va': 'top',
                         'xytext': (0, -6),
                         'textcoords': 'offset points',
                     }},
                    {'p1': (2, 0),
                     'p2': (5, 3),
                     'linewidth': 0,
                     'text': ' b',
                     'text_kw': {
                         'rotation': 0,
                         'fontsize': 'x-large',
                         'ha': 'left',
                         'va': 'top',
                     }},
                    {'p1': (5, 3),
                     'p2': (5, 4.5),
                     'linewidth': 0,
                     'text': ' c',
                     'text_kw': {
                         'rotation': 0,
                         'fontsize': 'x-large',
                         'ha': 'left',
                     }},
                ]
            },
        ),
    ]
)

zusammengesetze_korper = QuestionSet(
    grade='8',
    capital='Körper',
    subcapital='Volumen von Körpern',
    title='Zusammengesetze Körper',
    instruction='Berechne das Volumen des Körpers V₁',
    question_type='gap',
    questions=[
        Question(
            formula='<mat>V_2= ___ * ___ * ___ = 1^ ___ = ___ </mat><br>'
                    '<mat>V_(1+2) = {{v1}} * ___ * ___ = ___ ^3 = ___ </mat><br><br>'
                    '<mat>V_1 = V_(1+2) - V_2 = ___ - ___ = ___ </mat>',
            correct='1;1;1;3;1;'
                    '{{v1}};{{v1}};{{v1}};{{v1**3}};'
                    '{{v1**3}};1;{{v1**3-1}}',
            hint='Berechne zuerst das Volumen des zusammengesetzte n Körpers (V₁ + V₂) und ziehe '
                 'anschließend davon das Volumen des zugefügten Körpers ab (V₂).<br>'
                 'Für alle Quader gilt:<br><mat><b>Volumen = Länge * Breite * Höhe</b></mat>',
            variables={
                'v1': (randint, 2, 5),
                'units': (choice, measurement_units),
            },
            image={
                'draw_grid': False,
                'draw_axes': False,
                'axis_limits': {'xmin': '0',
                                'xmax': '7',
                                'ymin': '0',
                                'ymax': '4'},
                'polygons': [
                    {'xy': [(0, 0), (0, 3), (3, 3), (3, 0)],
                     'closed': True,
                     'facecolor': 'None',
                     'edgecolor': 'black',
                     'linewidth': 2,
                     'zorder': 5,
                     },
                    {'xy': [(0, 0), (0, 3), ('{{3-3/v1}}', 3), ('{{3-3/v1}}', '{{3-3/v1}}'),
                            (3, '{{3-3/v1}}'), (3, 0)],
                     'closed': True,
                     'facecolor': '#E0E0E0',
                     'edgecolor': 'None',
                     'linewidth': 2,
                     'zorder': 3,
                     },
                    {'xy': [(0, 3), (1, 4), (4, 4), (3, 3)],
                     'closed': True,
                     'facecolor': 'None',
                     'edgecolor': 'black',
                     'linewidth': 2,
                     'zorder': 5,
                     },
                    {'xy': [(0, 3), (1, 4), (4, 4), ('{{3+1/v1}}', '{{3+1/v1}}'), ('{{3-2/v1}}', '{{3+1/v1}}'),
                            ('{{3-3/v1}}', 3)],
                     'closed': True,
                     'facecolor': '#F5F5F5',
                     'edgecolor': 'None',
                     'linewidth': 2,
                     'zorder': 3,
                     },
                    {'xy': [(3, 0), (4, 1), (4, 4), (3, 3)],
                     'closed': True,
                     'facecolor': 'None',
                     'edgecolor': 'black',
                     'linewidth': 2,
                     'zorder': 5,
                     },
                    {'xy': [(3, 0), (4, 1), (4, 4), (3, 3)],
                     'closed': True,
                     'facecolor': '#F5F5F5',
                     'edgecolor': 'None',
                     'linewidth': 2,
                     'zorder': 3,
                     },
                    {'xy': [('{{3-3/v1}}', '{{3-3/v1}}'), (3, '{{3-3/v1}}'), (3, 3), ('{{3-3/v1}}', 3)],
                     'closed': True,
                     'facecolor': '#DEEFFC',
                     'edgecolor': 'black',
                     'linewidth': 2,
                     'linestyle': 'dashed',
                     'zorder': 4,
                     },
                    {'xy': [('{{3-3/v1}}', 3), ('{{3-2/v1}}', '{{3+1/v1}}'), ('{{3+1/v1}}', '{{3+1/v1}}'), (3, 3)],
                     'closed': True,
                     'facecolor': '#DEEFFC',
                     'edgecolor': 'black',
                     'linewidth': 2,
                     'linestyle': 'dashed',
                     'zorder': 4,
                     },
                    {'xy': [(3, '{{3-3/v1}}'), ('{{3+1/v1}}', '{{3-2/v1}}'), ('{{3+1/v1}}', '{{3+1/v1}}'), (3, 3)],
                     'closed': True,
                     'facecolor': '#DEEFFC',
                     'edgecolor': 'black',
                     'linewidth': 2,
                     'linestyle': 'dashed',
                     'zorder': 4,
                     },
                    {'xy': [(5, '{{3-3/v1}}'), ('{{5+3/v1}}', '{{3-3/v1}}'), ('{{5+3/v1}}', 3), (5, 3)],
                     'closed': True,
                     'facecolor': '#E0E0E0',
                     'edgecolor': 'black',
                     'linewidth': 2,
                     'zorder': 4.1,
                     },
                    {'xy': [(5, 3), ('{{5+1/v1}}', '{{3+1/v1}}'), ('{{5+4/v1}}', '{{3+1/v1}}'), ('{{5+3/v1}}', 3)],
                     'closed': True,
                     'facecolor': '#F5F5F5',
                     'edgecolor': 'black',
                     'linewidth': 2,
                     'zorder': 4,
                     },
                    {'xy': [('{{5+3/v1}}', '{{3-3/v1}}'), ('{{5+4/v1}}', '{{3-2/v1}}'), ('{{5+4/v1}}', '{{3+1/v1}}'),
                            ('{{5+3/v1}}', 3)],
                     'closed': True,
                     'facecolor': '#BDBDBD',
                     'edgecolor': 'black',
                     'linewidth': 2,
                     'zorder': 4,
                     },
                ],
                'lines': [
                    {'p1': ('{{3-3/v1}}', '{{3-3/v1}}'),
                     'p2': ('{{3-2/v1}}', '{{3-2/v1}}'),
                     'linewidth': 1,
                     'linestyle': 'dashed',
                     'color': 'black',
                     'zorder': 4.5,
                     },
                    {'p1': ('{{3-2/v1}}', '{{3-2/v1}}'),
                     'p2': ('{{3-2/v1}}', '{{3+1/v1}}'),
                     'linewidth': 1,
                     'linestyle': 'dashed',
                     'color': 'black',
                     'zorder': 4.5,
                     },
                    {'p1': ('{{3-2/v1}}', '{{3-2/v1}}'),
                     'p2': ('{{3+1/v1}}', '{{3-2/v1}}'),
                     'linewidth': 1,
                     'linestyle': 'dashed',
                     'color': 'black',
                     'zorder': 4.5,
                     },
                    {'p1': ('{{3+0.5/v1}}', '{{3-1.5/v1}}'),
                     'p2': (5, '{{3-1.5/v1}}'),
                     'linewidth': 2,
                     'color': 'black',
                     'zorder': 4.5,
                     },
                    {'p1': (0, 0),
                     'p2': (0, 3),
                     'linewidth': 0,
                     'text': '{{v1}} ',
                     'text_kw': {
                         'rotation': '0',
                         'fontsize': 'large',
                         'ha': 'right',
                     }},
                    {'p1': (0, 0),
                     'p2': (3, 0),
                     'linewidth': 0,
                     'text': '{{v1}}',
                     'text_kw': {
                         'rotation': '0',
                         'fontsize': 'large',
                         'va': 'top',
                     }},
                    {'p1': (3, 0),
                     'p2': (4, 1),
                     'linewidth': 0,
                     'text': '{{v1}}',
                     'text_kw': {
                         'rotation': '0',
                         'fontsize': 'large',
                         'va': 'top',
                         'ha': 'left',
                     }},
                    {'p1': ('{{3-3/v1}}', '{{3-3/v1}}'),
                     'p2': ('{{3-3/v1}}', 3),
                     'linewidth': 0,
                     'text': '1 ',
                     'text_kw': {
                         'rotation': '0',
                         'fontsize': 'large',
                         'ha': 'right',
                         'va': 'center',
                     }},
                    {'p1': ('{{3-3/v1}}', '{{3-3/v1}}'),
                     'p2': (3, '{{3-3/v1}}'),
                     'linewidth': 0,
                     'text': '1',
                     'text_kw': {
                         'rotation': '0',
                         'fontsize': 'large',
                         'va': 'top',
                     }},
                    {'p1': (3, '{{3-3/v1}}'),
                     'p2': ('{{3+1/v1}}', '{{3-2/v1}}'),
                     'linewidth': 0,
                     'text': '1',
                     'text_kw': {
                         'rotation': '0',
                         'fontsize': 'large',
                         'va': 'top',
                         'ha': 'left',
                     }},
                ],
                'texts': [
                    {'x': 1,
                     'y': 1,
                     's': 'V_1',
                     'color': 'tab:blue',
                     'fontsize': 'x-large',
                     'ha': 'right',
                     'va': 'top',
                     'zorder': 6,
                     },
                    {'x': '{{5+1.5/v1}}',
                     'y': '{{3-1.5/v1}}',
                     's': 'V_2',
                     'color': 'tab:blue',
                     'fontsize': 'x-large',
                     'ha': 'center',
                     'va': 'center',
                     'zorder': 6,
                     },
                ]
            },
        ),
        Question(
            formula='<mat>V_2 = ___ * ___ * {{v1}} = ___</mat><br>'
                    '<mat>V_3 = ___ * ___ * ___ = {{v1}}^ ___ = ___ </mat><br><br>'
                    '<mat>V_1 = V_2 + V_3 = ___ + ___ = ___</mat>',
            correct='{{3*v1}};{{v1}};{{3*v1**3}};'
                    '{{v1}};{{v1}};{{v1}};3;{{v1**3}};'
                    '{{3*v1**3}};{{v1**3}};{{4*v1**3}}',
            variables={
                'v1': (randint, 2, 5),
            },
            image={
                'draw_grid': False,
                'draw_axes': False,
                'axis_limits': {'xmin': '0',
                                'xmax': '8.5',
                                'ymin': '0',
                                'ymax': '5'},
                'polygons': [
                    {'xy': [(0, 0), (0, 1), (1, 1), (1, 0)],
                     'closed': True,
                     'facecolor': '#E0E0E0',
                     'edgecolor': 'black',
                     'linewidth': 2,
                     'zorder': 3,
                     },
                    {'xy': [(1.5, 0.5), (1.5, 1.5), (2.5, 1.5), (2.5, 0.5)],
                     'closed': True,
                     'facecolor': '#E0E0E0',
                     'edgecolor': 'black',
                     'linewidth': 2,
                     'zorder': 3,
                     },
                    {'xy': [(1, 0), (1.5, 0.5), (1.5, 1.5), (1, 1)],
                     'closed': True,
                     'facecolor': '#BDBDBD',
                     'edgecolor': 'black',
                     'linewidth': 2,
                     'zorder': 3,
                     },
                    {'xy': [(2.5, 0.5), (3, 1), (3, 2), (2.5, 1.5)],
                     'closed': True,
                     'facecolor': '#BDBDBD',
                     'edgecolor': 'black',
                     'linewidth': 2,
                     'zorder': 3,
                     },
                    {'xy': [(2, 2), (2.5, 2.5), (2.5, 2)],
                     'closed': True,
                     'facecolor': '#BDBDBD',
                     'edgecolor': 'black',
                     'linewidth': 2,
                     'zorder': 3,
                     },
                    {'xy': [(0, 1), (1, 1), (1.5, 1.5), (2.5, 1.5), (3, 2), (2, 2), (2.5, 2.5), (1.5, 2.5)],
                     'closed': True,
                     'facecolor': '#F5F5F5',
                     'edgecolor': 'black',
                     'linewidth': 2,
                     'zorder': 3,
                     },
                    {'xy': [(4, 0), (5, 0), (5, 1), (4, 1)],
                     'closed': True,
                     'facecolor': '#E0E0E0',
                     'edgecolor': 'black',
                     'linewidth': 2,
                     'zorder': 3,
                     },
                    {'xy': [(5, 0), (6.5, 1.5), (6.5, 2.5), (5, 1)],
                     'closed': True,
                     'facecolor': '#BDBDBD',
                     'edgecolor': 'black',
                     'linewidth': 2,
                     'zorder': 3,
                     },
                    {'xy': [(4, 1), (5, 1), (6.5, 2.5), (5.5, 2.5)],
                     'closed': True,
                     'facecolor': '#F5F5F5',
                     'edgecolor': 'black',
                     'linewidth': 2,
                     'zorder': 3,
                     },
                    {'xy': [(7, 0.5), (8, 0.5), (8, 1.5), (7, 1.5)],
                     'closed': True,
                     'facecolor': '#E0E0E0',
                     'edgecolor': 'black',
                     'linewidth': 2,
                     'zorder': 3,
                     },
                    {'xy': [(8, 0.5), (8.5, 1), (8.5, 2), (8, 1.5)],
                     'closed': True,
                     'facecolor': '#BDBDBD',
                     'edgecolor': 'black',
                     'linewidth': 2,
                     'zorder': 3,
                     },
                    {'xy': [(7, 1.5), (8, 1.5), (8.5, 2), (7.5, 2)],
                     'closed': True,
                     'facecolor': '#F5F5F5',
                     'edgecolor': 'black',
                     'linewidth': 2,
                     'zorder': 3,
                     },
                ],
                'lines': [
                    {'p1': (5.5, 0.5),
                     'p2': (5.5, 1.5),
                     'linewidth': 2,
                     'linestyle': 'dashed',
                     'zorder': 5,
                     'color': 'black',
                     },
                    {'p1': (6, 1),
                     'p2': (6, 2),
                     'linewidth': 2,
                     'linestyle': 'dashed',
                     'zorder': 5,
                     'color': 'black',
                     },
                    {'p1': (5.75, 1.25),
                     'p2': (7, 1.25),
                     'linewidth': 2,
                     'zorder': 5,
                     'color': 'black',
                     },
                    {'p1': (0, 0),
                     'p2': (1, 0),
                     'linewidth': 0,
                     'text': '{{v1}}',
                     'text_kw': {'fontsize': 'large', 'va': 'top', 'xytext': (0, -4), 'textcoords': 'offset points'},
                     },
                    {'p1': (1.5, 0.5),
                     'p2': (2.5, 0.5),
                     'linewidth': 0,
                     'text': '{{v1}}',
                     'text_kw': {'fontsize': 'large', 'va': 'top', 'xytext': (0, -4), 'textcoords': 'offset points'},
                     },
                    {'p1': (4, 0),
                     'p2': (5, 0),
                     'linewidth': 0,
                     'text': '{{v1}}',
                     'text_kw': {'fontsize': 'large', 'va': 'top', 'xytext': (0, -4), 'textcoords': 'offset points'},
                     },
                    {'p1': (7, 0.5),
                     'p2': (8, 0.5),
                     'linewidth': 0,
                     'text': '{{v1}}',
                     'text_kw': {'fontsize': 'large', 'va': 'top', 'xytext': (0, -4), 'textcoords': 'offset points'},
                     },
                    {'p1': (0, 0),
                     'p2': (0, 1),
                     'linewidth': 0,
                     'text': '{{v1}} ',
                     'text_kw': {'fontsize': 'large', 'ha': 'right', 'va': 'center', 'rotation': 0},
                     },
                    {'p1': (4, 0),
                     'p2': (4, 1),
                     'linewidth': 0,
                     'text': '{{v1}} ',
                     'text_kw': {'fontsize': 'large', 'ha': 'right', 'va': 'center', 'rotation': 0},
                     },
                    {'p1': (3, 1),
                     'p2': (3, 2),
                     'linewidth': 0,
                     'text': ' {{v1}}',
                     'text_kw': {'fontsize': 'large', 'ha': 'left', 'va': 'center', 'rotation': 0},
                     },
                    {'p1': (8.5, 1),
                     'p2': (8.5, 2),
                     'linewidth': 0,
                     'text': ' {{v1}}',
                     'text_kw': {'fontsize': 'large', 'ha': 'left', 'va': 'center', 'rotation': 0},
                     },
                    {'p1': (1, 0),
                     'p2': (1.5, 0.5),
                     'linewidth': 0,
                     'text': '{{v1}}',
                     'text_kw': {'fontsize': 'large', 'ha': 'left', 'va': 'top', 'rotation': 0},
                     },
                    {'p1': (2.5, 0.5),
                     'p2': (3, 1),
                     'linewidth': 0,
                     'text': '{{v1}}',
                     'text_kw': {'fontsize': 'large', 'ha': 'left', 'va': 'top', 'rotation': 0},
                     },
                    {'p1': (8, 0.5),
                     'p2': (8.5, 1),
                     'linewidth': 0,
                     'text': '{{v1}}',
                     'text_kw': {'fontsize': 'large', 'ha': 'left', 'va': 'top', 'rotation': 0},
                     },
                    {'p1': (0, 1),
                     'p2': (1.5, 2.5),
                     'linewidth': 0,
                     'text': '{{3*v1}}',
                     'text_kw': {'fontsize': 'large', 'ha': 'right', 'va': 'bottom', 'rotation': 0},
                     },
                    {'p1': (4, 1),
                     'p2': (5.5, 2.5),
                     'linewidth': 0,
                     'text': '{{3*v1}}',
                     'text_kw': {'fontsize': 'large', 'ha': 'right', 'va': 'bottom', 'rotation': 0},
                     },
                ],
                'texts': [
                    {'x': 1.5,
                     'y': 2,
                     's': 'V_1',
                     'color': 'tab:blue',
                     'fontsize': 'x-large',
                     'ha': 'center',
                     'va': 'center',
                     'zorder': 6,
                     },
                    {'x': 5.5,
                     'y': 2,
                     's': 'V_2',
                     'color': 'tab:blue',
                     'fontsize': 'x-large',
                     'ha': 'center',
                     'va': 'center',
                     'zorder': 6,
                     },
                    {'x': 7.5,
                     'y': 1,
                     's': 'V_3',
                     'color': 'tab:blue',
                     'fontsize': 'x-large',
                     'ha': 'center',
                     'va': 'center',
                     'zorder': 6,
                     },
                ]
            },
        ),
    ]
)

wurfel_und_quader = QuestionSet(
    grade='8',
    capital='Körper',
    subcapital='Volumen von Körpern',
    title='Würfel und Quader',
    instruction='Berechne das Volumen des folgenden Körpers.',
    question_type='gap',
    hint='<mat></b>Volumen = Länge * Breite * Höhe</b></mat>',
    questions=[
        Question(
            formula='<mat>V = ___{{units}} * ___{{units}} * {{v1}} {{units}} = ___{{units}}^3</mat>',
            correct='{{v1}};{{v1*v2}};{{v1*v1*(v1*v2)}}',
            variables={
                'v1': (choice, [2, 5, 10]),
                'v2': (randint, 4, 9),
                'units': (choice, measurement_units),
            },
            image={
                'draw_grid': False,
                'draw_axes': False,
                'axis_limits': {'xmin': '0',
                                'xmax': '5',
                                'ymin': '0',
                                'ymax': '5'},
                'polygons': [
                    {'xy': [(0, 0), (0, 1), (1, 1), (1, 0)],
                     'closed': True,
                     'facecolor': 'None',
                     'edgecolor': 'black',
                     'linewidth': 2,
                     'zorder': 3,
                     },
                    {'xy': [(0, 1), (4, 5), (5, 5), (1, 1)],
                     'closed': True,
                     'facecolor': 'None',
                     'edgecolor': 'black',
                     'linewidth': 2,
                     'zorder': 3,
                     },
                    {'xy': [(1, 0), (5, 4), (5, 5), (1, 1)],
                     'closed': True,
                     'facecolor': 'None',
                     'edgecolor': 'black',
                     'linewidth': 2,
                     'zorder': 3,
                     },
                ],
                'lines': [
                    {'p1': (0, 0),
                     'p2': (1, 0),
                     'linewidth': 0,
                     'text': '{{v1}} {{units}}',
                     'text_kw': {
                         'fontsize': 'x-large',
                         'va': 'top',
                         'xytext': (0, -6),
                         'textcoords': 'offset points',
                     }},
                    {'p1': (1, 0),
                     'p2': (5, 4),
                     'linewidth': 0,
                     'text': ' {{v1*v2}} {{units}}',
                     'text_kw': {
                         'rotation': 0,
                         'fontsize': 'x-large',
                         'ha': 'left',
                         'va': 'top',
                     }},
                    {'p1': (5, 4),
                     'p2': (5, 5),
                     'linewidth': 0,
                     'text': ' {{v1}} {{units}}',
                     'text_kw': {
                         'rotation': 0,
                         'fontsize': 'x-large',
                         'ha': 'left',
                     }},
                ]
            },
        ),
        Question(
            formula='<mat>V = ___{{units}} * ___{{units}} * ___{{units}} = ___{{units}}^3</mat>',
            correct='{{v1}};{{v2}};{{v3}};{{v1*v2*v3}}',
            variables={
                'v1': (randint, 4, 5),
                'v2': (randint, 7, 10),
                'v3': (randint, 2, 3),
                'units': (choice, measurement_units),
            },
            image={
                'draw_grid': False,
                'draw_axes': False,
                'axis_limits': {'xmin': '0',
                                'xmax': '5',
                                'ymin': '0',
                                'ymax': '4.5'},
                'polygons': [
                    {'xy': [(0, 0), (0, 1.5), (2, 1.5), (2, 0)],
                     'closed': True,
                     'facecolor': 'None',
                     'edgecolor': 'black',
                     'linewidth': 2,
                     'zorder': 3,
                     },
                    {'xy': [(0, 1.5), (3, 4.5), (5, 4.5), (2, 1.5)],
                     'closed': True,
                     'facecolor': 'None',
                     'edgecolor': 'black',
                     'linewidth': 2,
                     'zorder': 3,
                     },
                    {'xy': [(2, 0), (5, 3), (5, 4.5), (2, 1.5)],
                     'closed': True,
                     'facecolor': 'None',
                     'edgecolor': 'black',
                     'linewidth': 2,
                     'zorder': 3,
                     },
                ],

                'lines': [
                    {'p1': (0, 0),
                     'p2': (2, 0),
                     'linewidth': 0,
                     'text': '{{v1}} {{units}}',
                     'text_kw': {
                         'fontsize': 'x-large',
                         'va': 'top',
                         'xytext': (0, -6),
                         'textcoords': 'offset points',
                     }},
                    {'p1': (2, 0),
                     'p2': (5, 3),
                     'linewidth': 0,
                     'text': ' {{v2}} {{units}}',
                     'text_kw': {
                         'rotation': 0,
                         'fontsize': 'x-large',
                         'ha': 'left',
                         'va': 'top',
                     }},
                    {'p1': (5, 3),
                     'p2': (5, 4.5),
                     'linewidth': 0,
                     'text': ' {{v3}} {{units}}',
                     'text_kw': {
                         'rotation': 0,
                         'fontsize': 'x-large',
                         'ha': 'left',
                     }},
                ]
            },
        ),
        Question(
            formula='<mat>V = ___{{units}} * ___{{units}} * ___{{units}} = ___{{units}}^3</mat>',
            correct='{{v1}};{{v2}};{{v3}};{{v1*v2*v3}}',
            variables={
                'v1': (choice, [10, 12, 14, 16, 18, 20]),
                'v2': (randint, 4, 8),
                'v3': (randint, 1, 2),
                'units': (choice, measurement_units),
            },
            image={
                'draw_grid': False,
                'draw_axes': False,
                'axis_limits': {'xmin': '0',
                                'xmax': '10',
                                'ymin': '0',
                                'ymax': '3'},
                'polygons': [
                    {'xy': [(0, 0), (0, 1), (8, 1), (8, 0)],
                     'closed': True,
                     'facecolor': 'None',
                     'edgecolor': 'black',
                     'linewidth': 2,
                     'zorder': 3,
                     },
                    {'xy': [(0, 1), (2, 3), (10, 3), (8, 1)],
                     'closed': True,
                     'facecolor': 'None',
                     'edgecolor': 'black',
                     'linewidth': 2,
                     'zorder': 3,
                     },
                    {'xy': [(8, 0), (10, 2), (10, 3), (8, 1)],
                     'closed': True,
                     'facecolor': 'None',
                     'edgecolor': 'black',
                     'linewidth': 2,
                     'zorder': 3,
                     },
                ],
                'lines': [
                    {'p1': (0, 0),
                     'p2': (8, 0),
                     'linewidth': 0,
                     'text': '{{v1}} {{units}}',
                     'text_kw': {
                         'fontsize': 'x-large',
                         'va': 'top',
                         'xytext': (0, -6),
                         'textcoords': 'offset points',
                     }},
                    {'p1': (8, 0),
                     'p2': (10, 2),
                     'linewidth': 0,
                     'text': ' {{v2}} {{units}}',
                     'text_kw': {
                         'rotation': 0,
                         'fontsize': 'x-large',
                         'ha': 'left',
                         'va': 'top',
                     }},
                    {'p1': (10, 2),
                     'p2': (10, 3),
                     'linewidth': 0,
                     'text': ' {{v3}} {{units}}',
                     'text_kw': {
                         'rotation': 0,
                         'fontsize': 'x-large',
                         'ha': 'left',
                         'va': 'center',
                     }},
                ]
            },
        ),
    ]
)

kreiszylinder_und_prismen = QuestionSet(
    grade='8',
    capital='Körper',
    subcapital='Volumen von Körpern',
    title='Kreiszylinder und Prismen',
    instruction='',
    question_type='gap',
    hint='<mat></b>Volumen = Länge * Breite * Höhe</b></mat>',
    questions=[
        Question(
            instruction='Berechne den Inhalt der kreisförmigen Grundfläche G.',
            hint='<mat>V_Zylinder = G * h</mat><br><br>'
                 '<mat>G = V/h</mat>',
            formula='<mat>V = {{v1*v2}}{{units}}^3<br>'
                    'h = {{v1}} {{units}}</mat><br><br>'
                    '<mat>G = ___ {{units}}^3/___ {{units}} = ___ {{units}}^___ </mat>',
            correct='{{v1*v2}};{{v1}};{{v2}};2',
            variables={
                'v1': (randint, 5, 9),
                'v2': (randrange, 10, 20, 2),
                'units': (choice, measurement_units),
            },
            image={
                'draw_grid': False,
                'draw_axes': False,
                'axis_limits': {'xmin': '0',
                                'xmax': '5',
                                'ymin': '-1',
                                'ymax': '7'},
                'ellipses': [
                    {'xy': (2, 0),
                     'width': 4,
                     'height': 2,
                     'facecolor': '#E1BFE6',
                     'edgecolor': 'None',
                     },
                    {'xy': (2, 6),
                     'width': 4,
                     'height': 2,
                     'facecolor': '#E1BFE6',
                     'edgecolor': 'black',
                     'linewidth': 2,
                     },
                ],
                'arcs': [
                    {'xy': (2, 0),
                     'width': 4,
                     'height': 2,
                     'theta1': 180,
                     'theta2': 0,
                     'color': 'black',
                     'linewidth': 2,
                     },
                    {'xy': (2, 0),
                     'width': 4,
                     'height': 2,
                     'theta1': 0,
                     'theta2': 180,
                     'color': 'black',
                     'linewidth': 2,
                     'linestyle': 'dashed',
                     },
                ],
                'lines': [
                    {'p1': (2, 0),
                     'p2': (4, 0),
                     'color': '#AD55BC',
                     'linestyle': 'dashed',
                     'linewidth': 2,
                     'text': 'r',
                     'marker': 'x',
                     'markevery': [0],
                     'text_kw': {
                         'color': '#AD55BC',
                         'fontsize': 'large',
                         'va': 'bottom',
                     }},
                    {'p1': (2, 6),
                     'p2': (4, 6),
                     'color': '#AD55BC',
                     'linestyle': 'dashed',
                     'linewidth': 2,
                     'text': 'r',
                     'marker': 'x',
                     'markevery': [0],
                     'text_kw': {
                         'color': '#AD55BC',
                         'fontsize': 'large',
                         'va': 'bottom',
                     }},
                    {'p1': (0, 0),
                     'p2': (0, 6),
                     'color': 'black',
                     'linewidth': 2,
                     },
                    {'p1': (4, 0),
                     'p2': (4, 6),
                     'color': 'black',
                     'linewidth': 2,
                     },
                    {'p1': (4.5, 0),
                     'p2': (4.5, 6),
                     'color': 'tab:blue',
                     'marker': '_',
                     'markevery': [0, 1],
                     'text': ' {{v1}} {{units}}',
                     'text_kw': {
                         'rotation': 0,
                         'color': 'tab:blue',
                         'fontsize': 'large',
                         'ha': 'left',
                     }},
                ],
                'texts': [
                    {'x': 1,
                     'y': 0,
                     'color': '#AD55BC',
                     's': 'G',
                     'fontsize': 'x-large',
                     'ha': 'center',
                     },
                    {'x': 1,
                     'y': 6,
                     'color': '#AD55BC',
                     's': 'G',
                     'fontsize': 'x-large',
                     'ha': 'center',
                     },
                ],
            },
        ),
        Question(
            instruction='Berechne das Volumen des schiefen Zylinders.',
            hint='Die Formel für den allgemeinen Kreiszylinder gilt auch für den schiefen Zylinder:<br>'
                 '<mat>V_Zylinder = G * h</mat>',
            formula='<mat>G = {{v2}} {{units}}^2<br>'
                    'h = {{v1}} {{units}}</mat><br>'
                    '<mat>V = ___{{units}}^2 * ___{{units}} =___{{units}}^3</mat>',
            correct='{{v2}};{{v1}};{{v1*v2}}',
            variables={
                'v1': (randrange, 10, 40, 5),
                'v2': (randrange, 50, 150, 10),
                'units': (choice, measurement_units),
            },
            image={
                'draw_grid': False,
                'draw_axes': False,
                'axis_limits': {'xmin': '0',
                                'xmax': '6.5',
                                'ymin': '-1',
                                'ymax': '7'},
                'ellipses': [
                    {'xy': (2, 0),
                     'width': 4,
                     'height': 2,
                     'facecolor': '#E1BFE6',
                     'edgecolor': 'None',
                     },
                    {'xy': (3.5, 6),
                     'width': 4,
                     'height': 2,
                     'facecolor': '#E1BFE6',
                     'edgecolor': 'black',
                     'linewidth': 2,
                     },
                ],
                'arcs': [
                    {'xy': (2, 0),
                     'width': 4,
                     'height': 2,
                     'theta1': 180,
                     'theta2': 0,
                     'color': 'black',
                     'linewidth': 2,
                     },
                    {'xy': (2, 0),
                     'width': 4,
                     'height': 2,
                     'theta1': 0,
                     'theta2': 180,
                     'color': 'black',
                     'linewidth': 2,
                     'linestyle': 'dashed',
                     },
                ],
                'lines': [
                    {'p1': (2, 0),
                     'p2': (4, 0),
                     'color': '#AD55BC',
                     'linestyle': 'dashed',
                     'linewidth': 2,
                     'text': 'r',
                     'marker': 'x',
                     'markevery': [0],
                     'text_kw': {
                         'color': '#AD55BC',
                         'fontsize': 'large',
                         'va': 'bottom',
                     }},
                    {'p1': (3.5, 6),
                     'p2': (5.5, 6),
                     'color': '#AD55BC',
                     'linestyle': 'dashed',
                     'linewidth': 2,
                     'text': 'r',
                     'marker': 'x',
                     'markevery': [0],
                     'text_kw': {
                         'color': '#AD55BC',
                         'fontsize': 'large',
                         'va': 'bottom',
                     }},
                    {'p1': (0, 0),
                     'p2': (1.5, 6),
                     'color': 'black',
                     'linewidth': 2,
                     },
                    {'p1': (4, 0),
                     'p2': (5.5, 6),
                     'color': 'black',
                     'linewidth': 2,
                     },
                    {'p1': (6, 0),
                     'p2': (6, 6),
                     'color': 'tab:blue',
                     'marker': '_',
                     'markevery': [0, 1],
                     'text': ' {{v1}} {{units}}',
                     'text_kw': {
                         'rotation': 0,
                         'color': 'tab:blue',
                         'fontsize': 'large',
                         'ha': 'left',
                     }},
                ],
                'texts': [
                    {'x': 1,
                     'y': 0,
                     'color': '#AD55BC',
                     's': 'G',
                     'fontsize': 'x-large',
                     'ha': 'center',
                     },
                    {'x': 2.5,
                     'y': 6,
                     'color': '#AD55BC',
                     's': 'G',
                     'fontsize': 'x-large',
                     'ha': 'center',
                     },
                ],
            },
        ),
        Question(
            instruction='Berechne das Volumen des Quaders.',
            formula='Der abgebildete Quader hat Seitenlängen von {{v1}} {{units}} '
                    'und {{v2}} {{units}} und ist {{v3}} {{units}} hoch. <br>'
                    '<mat>V = ___{{units}} * ___{{units}} * ___{{units}} = ___{{units}}^3</mat>',
            hint='<mat>V_Quader = G * h</mat>',
            correct='{{v1}};{{v2}};{{v3}};{{v1*v2*v3}}',
            variables={
                'v1': (randint, 4, 6),
                'v2': (randint, 4, 8),
                'v3': (randint, 2, 4),
                'units': (choice, measurement_units),
            },
            image={
                'draw_grid': False,
                'draw_axes': False,
                'axis_limits': {'xmin': '0',
                                'xmax': '6.2',
                                'ymin': '0',
                                'ymax': '3.2'},
                'polygons': [
                    {'xy': [(0, 0), (0, 2), (5, 2), (5, 0)],
                     'closed': True,
                     'facecolor': 'None',
                     'edgecolor': 'black',
                     'linewidth': 2,
                     'zorder': 3,
                     },
                    {'xy': [(0, 2), (1.2, 3.2), (6.2, 3.2), (5, 2)],
                     'closed': True,
                     'facecolor': 'None',
                     'edgecolor': 'black',
                     'linewidth': 2,
                     'zorder': 3,
                     },
                    {'xy': [(5, 0), (6.2, 1.2), (6.2, 3.2), (5, 2)],
                     'closed': True,
                     'facecolor': 'None',
                     'edgecolor': 'black',
                     'linewidth': 2,
                     'zorder': 3,
                     },
                ],
                'lines': [
                    {'p1': (0, 0),
                     'p2': (1.2, 1.2),
                     'linewidth': 2,
                     'color': 'black',
                     'linestyle': 'dashed',
                     },
                    {'p1': (1.2, 1.2),
                     'p2': (1.2, 3.2),
                     'linewidth': 2,
                     'color': 'black',
                     'linestyle': 'dashed',
                     },
                    {'p1': (1.2, 1.2),
                     'p2': (6.2, 1.2),
                     'linewidth': 2,
                     'color': 'black',
                     'linestyle': 'dashed',
                     },
                    {'p1': (1.2, 1.2),
                     'p2': (2.5, 0),
                     'linewidth': 2,
                     'color': 'gold',
                     },
                    {'p1': (2.5, 0),
                     'p2': (2.5, 2),
                     'linewidth': 2,
                     'color': 'gold',
                     },
                    {'p1': (1.2, 3.2),
                     'p2': (2.5, 2),
                     'linewidth': 2,
                     'color': 'gold',
                     },
                ],
                'texts': [
                    {'x': 0,
                     'y': 0,
                     's': 'A',
                     'color': 'black',
                     'fontsize': 'x-large',
                     'va': 'top',
                     'ha': 'right',
                     },
                    {'x': 0,
                     'y': 2,
                     's': 'E',
                     'color': 'black',
                     'fontsize': 'x-large',
                     'va': 'bottom',
                     'ha': 'right',
                     },
                    {'x': 1.2,
                     'y': 1.2,
                     's': 'D ',
                     'color': 'black',
                     'fontsize': 'x-large',
                     'va': 'bottom',
                     'ha': 'right',
                     },
                    {'x': 1.2,
                     'y': 3.2,
                     's': 'H',
                     'color': 'black',
                     'fontsize': 'x-large',
                     'va': 'bottom',
                     },
                    {'x': 2.5,
                     'y': -0.05,
                     's': 'K',
                     'color': 'black',
                     'fontsize': 'x-large',
                     'va': 'top',
                     },
                    {'x': 2.5,
                     'y': 2.05,
                     's': 'J',
                     'color': 'black',
                     'fontsize': 'x-large',
                     'va': 'bottom',
                     'zorder': 15,
                     },
                    {'x': 5,
                     'y': 0,
                     's': 'B',
                     'color': 'black',
                     'fontsize': 'x-large',
                     'va': 'top',
                     'ha': 'left',
                     },
                    {'x': 6.2,
                     'y': 1.2,
                     's': 'C',
                     'color': 'black',
                     'fontsize': 'x-large',
                     'ha': 'left',
                     'va': 'top',
                     },
                    {'x': 5,
                     'y': 2,
                     's': ' F',
                     'color': 'black',
                     'fontsize': 'x-large',
                     'va': 'top',
                     'ha': 'left',
                     },
                    {'x': 6.2,
                     'y': 3.2,
                     's': 'G',
                     'color': 'black',
                     'fontsize': 'x-large',
                     'ha': 'left',
                     },
                ]
            },
        ),
        Question(
            instruction='Berechne das Volumen beider Prismen.',
            formula='Die Fläche DHJK teilt den Quader in zwei Prismen, '
                    'wovon eines das rechtwinklige Dreieck ADK als Grundfläche hat. <br>'
                    'Die Seitenlängen des Quaders betragen {{v1}} {{units}} und {{v2}} {{units}}, '
                    'die Höhe beträgt {{v3}} {{units}}. Die Strecken bar(AK) und bar(BK) sind gleich lang.<br> <br> '
                    '<mat>V_Gesamt = {{v1*v2*v3}}{{units}}^3</mat><br>'
                    '<mat>V_Dreieck = ((___{{units}} * ___{{units}})/2) * ___{{units}} = ___{{units}}^3</mat><br>'
                    '<mat>V_Rest = ___{{units}}^3 -___{{units}}^3 = ___{{units}}^3</mat>',
            hint='<mat>V_Gesamt = V_Dreieck + V_Rest</mat><br><br>'
                 '<mat>V_Dreieck = G_Dreieck * H_Körper</mat><br><br>'
                 '<mat>G_Dreieck = (Schenkel a * Schenkel b)/2',
            correct='{{(v1/2)|round|int}};{{v2}};{{v3}};{{(v1*v2*v3/4)|round|int}};'
                    '{{v1*v2*v3}};{{(v1*v2*v3/4)|round|int}};{{(v1*v2*v3*3/4)|round|int}}',
            variables={
                'v1': (randrange, 4, 8, 2),
                'v2': (randrange, 4, 10, 2),
                'v3': (randint, 2, 5),
                'units': (choice, measurement_units),
            },
            image={
                'draw_grid': False,
                'draw_axes': False,
                'axis_limits': {'xmin': '0',
                                'xmax': '6.2',
                                'ymin': '0',
                                'ymax': '3.2'},
                'polygons': [
                    {'xy': [(0, 0), (0, 2), (5, 2), (5, 0)],
                     'closed': True,
                     'facecolor': 'None',
                     'edgecolor': 'black',
                     'linewidth': 2,
                     'zorder': 3,
                     },
                    {'xy': [(0, 2), (1.2, 3.2), (6.2, 3.2), (5, 2)],
                     'closed': True,
                     'facecolor': 'None',
                     'edgecolor': 'black',
                     'linewidth': 2,
                     'zorder': 3,
                     },
                    {'xy': [(5, 0), (6.2, 1.2), (6.2, 3.2), (5, 2)],
                     'closed': True,
                     'facecolor': 'None',
                     'edgecolor': 'black',
                     'linewidth': 2,
                     'zorder': 3,
                     },
                ],
                'lines': [
                    {'p1': (0, 0),
                     'p2': (1.2, 1.2),
                     'linewidth': 2,
                     'color': 'black',
                     'linestyle': 'dashed',
                     },
                    {'p1': (1.2, 1.2),
                     'p2': (1.2, 3.2),
                     'linewidth': 2,
                     'color': 'black',
                     'linestyle': 'dashed',
                     },
                    {'p1': (1.2, 1.2),
                     'p2': (6.2, 1.2),
                     'linewidth': 2,
                     'color': 'black',
                     'linestyle': 'dashed',
                     },
                    {'p1': (1.2, 1.2),
                     'p2': (2.5, 0),
                     'linewidth': 2,
                     'color': 'gold',
                     },
                    {'p1': (2.5, 0),
                     'p2': (2.5, 2),
                     'linewidth': 2,
                     'color': 'gold',
                     },
                    {'p1': (1.2, 3.2),
                     'p2': (2.5, 2),
                     'linewidth': 2,
                     'color': 'gold',
                     },
                ],
                'texts': [
                    {'x': 0,
                     'y': 0,
                     's': 'A',
                     'color': 'black',
                     'fontsize': 'x-large',
                     'va': 'top',
                     'ha': 'right',
                     },
                    {'x': 0,
                     'y': 2,
                     's': 'E',
                     'color': 'black',
                     'fontsize': 'x-large',
                     'va': 'bottom',
                     'ha': 'right',
                     },
                    {'x': 1.2,
                     'y': 1.2,
                     's': 'D ',
                     'color': 'black',
                     'fontsize': 'x-large',
                     'va': 'bottom',
                     'ha': 'right',
                     },
                    {'x': 1.2,
                     'y': 3.2,
                     's': 'H',
                     'color': 'black',
                     'fontsize': 'x-large',
                     'va': 'bottom',
                     },
                    {'x': 2.5,
                     'y': -0.05,
                     's': 'K',
                     'color': 'black',
                     'fontsize': 'x-large',
                     'va': 'top',
                     },
                    {'x': 2.5,
                     'y': 2.05,
                     's': 'J',
                     'color': 'black',
                     'fontsize': 'x-large',
                     'va': 'bottom',
                     'zorder': 15,
                     },
                    {'x': 5,
                     'y': 0,
                     's': 'B',
                     'color': 'black',
                     'fontsize': 'x-large',
                     'va': 'top',
                     'ha': 'left',
                     },
                    {'x': 6.2,
                     'y': 1.2,
                     's': 'C',
                     'color': 'black',
                     'fontsize': 'x-large',
                     'ha': 'left',
                     'va': 'top',
                     },
                    {'x': 5,
                     'y': 2,
                     's': ' F',
                     'color': 'black',
                     'fontsize': 'x-large',
                     'va': 'top',
                     'ha': 'left',
                     },
                    {'x': 6.2,
                     'y': 3.2,
                     's': 'G',
                     'color': 'black',
                     'fontsize': 'x-large',
                     'ha': 'left',
                     },
                ]
            },
        ),
    ]
)
question_sets = [
    # volumen,
    # zusammengesetze_korper,
    # wurfel_und_quader,
    kreiszylinder_und_prismen,
]
